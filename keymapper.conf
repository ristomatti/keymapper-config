# Immediately forward common modifiers
Meta          >> Meta
Control       >> Control
AltRight      >> AltRight

# Virtual modifier state files
STATE_DIR             = $HOME/.local/state/keymapper/virtual
AUTO_SHIFT_FILE       = "STATE_DIR/AutoShift"
FAST_DIACRITICS_FILE  = "STATE_DIR/FastDiacritics"
CAPS_WORD_FILE        = "STATE_DIR/CapsWord"

_notification_timeout = 5000

notify = notify-send -t _notification_timeout "keymapper"

# Create state directory if it doesn't exist
ensureStateDirExists       = test -f STATE_DIR || mkdir -p STATE_DIR

# Input mode status bar indicator toggling
auto_shift_status_on       = $(ensureStateDirExists && touch AUTO_SHIFT_FILE)
auto_shift_status_off      = $(test -f AUTO_SHIFT_FILE && rm AUTO_SHIFT_FILE)

fast_diacritics_status_on  = $(ensureStateDirExists && touch FAST_DIACRITICS_FILE)
fast_diacritics_status_off = $(test -f FAST_DIACRITICS_FILE && rm FAST_DIACRITICS_FILE)

caps_word_status_on        = $(ensureStateDirExists && touch CAPS_WORD_FILE)
caps_word_status_off       = $(test -f CAPS_WORD_FILE && rm CAPS_WORD_FILE)

# Allow using Alt as modifier without breaking window move/resize with Alt held
Alt             = !ButtonLeft !ButtonRight AltLeft

# Intl. layout modifiers
AltGr           = AltRight

# Exact modifiers
_Meta           = !Control       !MetaRight !AltLeft !AltGr MetaLeft
_MetaRight      = !Control !Meta            !AltLeft !AltGr MetaRight
_Alt            = !Control !Meta !MetaRight          !AltGr AltLeft
_AltGr          = !Control !Meta !MetaRight !AltLeft        AltGr
_Control        =          !Meta !MetaRight !AltLeft !AltGr ControlLeft
_ControlRight   =          !Meta !MetaRight !AltLeft !AltGr ControlRight
_Shift          = !Control !Meta !MetaRight !AltLeft !AltGr ShiftLeft
_ShiftRight     = !Control !Meta !MetaRight !AltLeft !AltGr ShiftRight

# Modifier groups
EitherAlt       = AltLeft | AltGr

# Key groups
MouseButton     = ButtonLeft | ButtonRight | ButtonMiddle | ButtonBack | ButtonForward
Number          = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9
Letter          = A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z

# Directional navigation keys
KeyUp           = I
KeyLeft         = J
KeyDown         = K
KeyRight        = L
Direction       = KeyUp | KeyLeft | KeyDown | KeyRight

# Window manager shortcut keys
Workspace       = Number | M | P | Minus
ScratchpadApp   = S | G | O
WMShortcut      = Workspace | ScratchpadApp | Enter | Space | Escape | Tab | C | F | R | A | Z | W | V | H | N

LeaderMod       = F15
ScratchpadMod   = F13

# Input mode toggle keys
CapsWord       = Virtual1
AutoShift      = Virtual2
FastDiacritics = Virtual3


# CapsWord emulation (https://docs.qmk.fm/#/feature_caps_word)
[default]
  CapsWord    = Virtual1
  CapsWordKey = Letter | Number | Minus | Backspace

  Shift{200ms}          >> Shift
  ShiftLeft{ShiftRight} >> CapsWord CapsLock ^

  CapsWord >> caps_word_status_on ^ caps_word_status_off

[modifier="CapsWord"]
  Minus                 >> Shift{Minus} # '_'
  CapsWordKey           >> CapsWordKey
  !CapsWordKey Any      >> CapsWord CapsLock Any ^


# AutoShift emulation (https://docs.qmk.fm/#/feature_auto_shift)
[default]
  AutoShift   = Virtual2
  AutoShifted = BracketLeft | BracketRight | Number | Minus | Equal | Comma | Period
  AutoShiftIgnored = MetaLeft | MetaRight | Control | ControlRight | AltLeft | AltRight | F17

  AutoShift >> auto_shift_status_on ^ auto_shift_status_off

[modifier="AutoShift"]
  Shift{AutoShifted} >> (Shift AutoShifted)
  AutoShifted{120ms} !AutoShifted   >> (Shift AutoShifted)
  AutoShifted{Any}                  >> AutoShifted Any ^
  AutoShifted                       >> AutoShifted


# FastDiacritics // Keychron K15 Pro
[default]
  FastDiacritics = Virtual3
  FastDiacritics >> fast_diacritics_status_on ^ fast_diacritics_status_off

[modifier="FastDiacritics" title=/GMail|Outlook|Slack|WhatsApp|TickTick/ device=/Keychron K15 Pro/]
  Shift{Comma}          >> (Shift Semicolon)  # :
  ShiftRight{2}         >> (Shift Quote)      # "

  Quote{120ms}          >> Quote ^
  Semicolon{120ms}      >> Semicolon ^
  AltGr{Quote}          >> !AltGr Quote
  AltGr{Semicolon}      >> !AltGr Semicolon
  Quote                 >> type_adieresis
  Semicolon             >> type_odieresis


# Default mappings
[default]
  LeaderKey                     = Comma
  Leader                        = LeaderKey !150ms

  # Mouse button actions
  ButtonBack{150ms}             >> window_move
  ButtonForward{150ms}          >> window_resize
  ButtonBack{ButtonMiddle}      >> wm_close_window


# Mouse buttons // Logitech MX Anywhere 2S
[device="MX Anywhere 2S Mouse"]
  ButtonMiddle{150ms}           >> wm_float_toggle


# Defaults // Keychron K3 Pro
[device=/Keychron K3 Pro/]
  Backquote     >> ScratchpadMod    # F13
  BracketRight  >> LeaderMod{200ms} # F15


# Neovim, Vim // Keychron K3 Pro
[device=/Keychron K3 Pro/ title=/^.* - N?VIM$/]
  BracketLeft   >> Escape


# Key definitions // Keychron K15 Pro
[device=/Keychron K15 Pro/]
  # Split space
  SpaceLeft      = MetaRight

  # Left side macro keys
  Macro1        = ScratchpadMod # F13
  Option        = F14
  Command       = F15
  Lock          = F16

  # Rotary encoder
  EncoderButton = NumpadEnter
  EncoderRight  = NumpadAdd
  EncoderLeft   = NumpadSubtract


# Encoder mappings for Rofi // Keychron K15 Pro
[device=/Keychron K15 Pro/ title=/rofi/i]
  EncoderButton     >> Enter ^
  EncoderRight      >> ArrowDown
  EncoderLeft       >> ArrowUp


# Slack // Keychron K15 Pro
[class="slack" device=/Keychron K15 Pro/]
  Escape{F}       >> slack_switch_channel
  Escape{1}       >> slack_goto_workspace1
  Escape{2}       >> slack_goto_workspace2
  Escape{H}       >> slack_goto_home
  Escape{A}       >> slack_goto_activity
  Escape{D}       >> slack_goto_dms
  Escape{T}       >> slack_goto_threads
  Escape{L}       >> slack_goto_later
  Escape{U}       >> slack_goto_unread
  Escape{M}       >> slack_mic_mute_toggle
  Escape{Space}   >> slack_switch_channel


# Browser // Keychron K15 Pro
[class=/chrome|chromium|firefox|lights-ui/i device=/Keychron K15 Pro/]
  Escape{T}       >> new_tab
  Escape{W}       >> close_tab
  Escape{L}       >> goto_location
  Escape{S}       >> suspend_tab
  Escape{B}       >> navigate_back
  Escape{F}       >> navigate_forward


# Default mappings // Keychron K15 Pro
[device=/Keychron K15 Pro/]
  Macro1                              >> show_scene_picker

  Option{250ms}                       >> AutoShift ^
  Option                              >> FastDiacritics ^

  Command !500ms Command              >> show_window_switcher
  Command !2000ms R                   >> show_run_menu
  Command !3000ms L                   >> wm_lock_desktop

  # Switch keyboard layout
  Lock{200ms}                         >> Shift{Lock} 200ms ShiftLeft ^
  Lock                                >>

  # Encoder brightness control
  (ControlRight Shift){EncoderButton} >> brightness_reset
  (ControlRight Shift){EncoderRight}  >> brightness_increase
  (ControlRight Shift){EncoderLeft}   >> brightness_decrease

  # Encoder color temp control
  ControlRight{EncoderButton}         >> color_temp_reset
  ControlRight{EncoderRight}          >> color_temp_increase
  ControlRight{EncoderLeft}           >> color_temp_decrease

  # Encoder media control
  AltGr{EncoderButton}                >> !AltGr MediaStop ^
  AltGr{EncoderRight}                 >> !AltGr MediaTrackNext
  AltGr{EncoderLeft}                  >> !AltGr MediaTrackPrevious

  # Encoder audio control
  EncoderButton                       >> MediaPlayPause ^
  EncoderRight                        >> AudioVolumeUp
  EncoderLeft                         >> AudioVolumeDown

  # Disable default leader key
  LeaderKey                           >> LeaderKey

  Shift{Backspace}                    >> !Shift Delete

  # Directional tiled window movement
  (SpaceLeft Shift){KeyUp}            >> Meta{Shift{ArrowUp}} ^
  (SpaceLeft Shift){KeyLeft}          >> Meta{Shift{ArrowLeft}} ^
  (SpaceLeft Shift){KeyDown}          >> Meta{Shift{ArrowDown}} ^
  (SpaceLeft Shift){KeyRight}         >> Meta{Shift{ArrowRight}} ^


  # WM shortcuts used with Meta
  SpaceLeft{WMShortcut}               >> Meta{WMShortcut}

  # Directional tiled window focus
  SpaceLeft{KeyUp}                    >> Meta{ArrowUp}
  SpaceLeft{KeyLeft}                  >> Meta{ArrowLeft}
  SpaceLeft{KeyDown}                  >> Meta{ArrowDown}
  SpaceLeft{KeyRight}                 >> Meta{ArrowRight}

  SpaceLeft{Comma}                    >> show_emoji_picker
  SpaceLeft{E}                        >> show_emoji_picker
  SpaceLeft{Q}                        >> wm_close_window
  SpaceLeft{Lock}                     >> wm_lock_desktop
  SpaceLeft{BracketLeft}              >> wm_show_terminal
  SpaceLeft{Quote}                    >> type_adieresis
  SpaceLeft{Semicolon}                >> type_odieresis

  # SpaceLeft                           >> Space

  # Editor actions
  AltGr{Insert}                       >> End
  AltGr{Backspace}                    >> Delete

  # Nordic symbol mappings
  AdieresisKey = A | Quote
  OdieresisKey = O | Semicolon

  AltGr{AdieresisKey}                 >> type_adieresis  # 'ä'
  AltGr{OdieresisKey}                 >> type_odieresis  # 'ö'
  AltGr{E}                            >> AltGr{5}        # '€'
  AltGr{2}                            >> !AltGr Shift{2} # '@'
  AltGr{4}                            >> !AltGr Shift{4} # '$'
  AltGr{BracketLeft}                  >> !AltGr Shift{9} # '('
  AltGr{BracketRight}                 >> !AltGr Shift{0} # ')'

  # Long-pres shortcuts
  Backslash{120ms}                    >> wm_show_terminal
  Backslash                           >> Backslash
  Backquote{120ms}                    >> ScratchpadMod
  Backquote                           >> Backquote

  type_adieresis                      >> AltGr{Q}
  type_odieresis                      >> AltGr{P}


# Jetbrains IDE defaults
[class=/jetbrains/]
  Editor    = E
  Focus     = F
  Goto      = G

  FocusKey  = Direction | N | P

  Editor{Direction}     >> AltGr{Control{Direction}}
  Editor{Any}           >> Editor Any

  Focus{FocusKey}       >> AltGr{AltLeft{FocusKey}}
  Focus{Any}            >> Focus Any

  Goto{D}               >> goto_declaration
  Goto{I}               >> goto_implementation
  Goto{F}               >> goto_file
  Goto{S}               >> goto_symbol
  Goto{Any}             >> Goto Any

  Editor{!75ms}         >> Editor
  Focus{!75ms}          >> Focus
  Goto{!75ms}           >> Goto

  _Shift{Enter}         >> End

  goto_declaration      >> Control{B}
  goto_implementation   >> Control{AltLeft{B}}
  goto_file             >> AltLeft{P}
  goto_symbol           >> AltLeft{Shift{P}}


# Browser defaults
[class=/chrome|chromium|firefox|lights-ui/i]
  Leader T              >> new_tab
  Leader X              >> close_tab
  Leader L              >> goto_location

  EitherAlt{T}          >> new_tab
  EitherAlt{W}          >> close_tab
  Alt{PageUp}           >> prev_tab
  Alt{PageDown}         >> next_tab

  AltGr{P}              >> pin_tab
  AltGr{S}              >> suspend_tab

  Alt{KeyLeft}          >> prev_tab
  Alt{KeyRight}         >> next_tab
  Alt{KeyUp}            >> scroll_up
  Alt{KeyDown}          >> scroll_down

  goto_location         >> _Control{L}
  pin_tab               >> _Alt{P}
  scroll_up             >> ArrowUp ArrowUp ArrowUp ArrowUp ArrowUp ArrowUp ArrowUp ArrowUp
  scroll_down           >> ArrowDown ArrowDown ArrowDown ArrowDown ArrowDown ArrowDown ArrowDown ArrowDown
  suspend_tab           >> _Alt{Z}


# Slack defaults
[class="slack"]
  Leader F              >> slack_switch_channel
  Leader 1              >> slack_goto_workspace1
  Leader 2              >> slack_goto_workspace2
  Leader H              >> slack_goto_home
  Leader A              >> slack_goto_activity
  Leader D              >> slack_goto_dms
  Leader T              >> slack_goto_threads
  Leader L              >> slack_goto_later
  Leader U              >> slack_goto_unread
  Leader M              >> slack_mic_mute_toggle

  EitherAlt{Space}      >> slack_switch_channel
  EitherAlt{1}          >> slack_goto_workspace1
  EitherAlt{2}          >> slack_goto_workspace2
  EitherAlt{M}          >> slack_mic_mute_toggle
  Alt{Tab}              >> slack_next_section
  Alt{Shift{Tab}}       >> slack_prev_section
  Alt{KeyUp}            >> slack_prev_chat
  Alt{KeyDown}          >> slack_next_chat

  Alt{KeyLeft}          >> navigate_back
  Alt{KeyRight}         >> navigate_forward

  slack_goto_home       >> (Control Shift){1}
  slack_goto_dms        >> (Control Shift){2}
  slack_goto_activity   >> (Control Shift){3}
  slack_goto_later      >> (Control Shift){4}
  slack_goto_threads    >> (Control Shift){T}
  slack_goto_unread     >> (Control Shift){A}
  slack_switch_channel  >> Control{K}
  slack_mic_mute_toggle >> (Control Shift){Space}
  slack_next_chat       >> AltLeft{ArrowDown}
  slack_prev_chat       >> AltLeft{ArrowUp}
  slack_goto_workspace1 >> Control{1}
  slack_goto_workspace2 >> Control{2}
  slack_next_section    >> F6
  slack_prev_section    >> Shift{F6}


# Default abstract commands
[default]
  new_tab                     >> _Control{T}
  close_tab                   >> _Control{W}
  prev_tab                    >> _Control{PageUp}
  next_tab                    >> _Control{PageDown}
  navigate_back               >> _Alt{ArrowLeft}
  navigate_forward            >> _Alt{ArrowRight}

  window_move                 >> (AltLeft ButtonLeft)
  window_resize               >> (AltLeft ButtonRight)

  # show_emoji_picker           >> $(rofimoji --selector-args="-normal-window" --skin-tone neutral --prompt emoji --keybinding-copy Control-c) ^
  show_emoji_picker           >> $(rofimoji --skin-tone neutral --prompt emoji --keybinding-copy Control-c) ^
  show_scene_picker           >> $($HOME/.config/regolith/rofi/rofi-hass-scene.sh) ^
  show_window_switcher        >> $(rofi -show window) ^
  show_run_menu               >> $(rofi -normal-window -show run) ^

  brightness_decrease         >> $(redshiftctl brightness -)
  brightness_increase         >> $(redshiftctl brightness +)
  brightness_reset            >> $(redshiftctl brightness =) ^
  color_temp_decrease         >> $(redshiftctl temperature -)
  color_temp_increase         >> $(redshiftctl temperature +)
  color_temp_reset            >> $(redshiftctl temperature =) ^

  wm_show_terminal            >> Meta{K}
  wm_close_window             >> ^Meta{Shift{Q}}
  wm_float_toggle             >> Meta{Escape}
  wm_lock_desktop             >> (Meta Control Shift){L}

# vim: ft=perl sw=2 ts=2 sts=2 expandtab

