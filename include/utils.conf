# Status bar triggered action indicator
EVENT_FIFO   = /tmp/keymapper-event

# Keyboard configuration
setKeyboardLayout     = $(gsettings set org.gnome.desktop.input-sources current "$1")
setKeyRepeatDelay     = $(gsettings set org.gnome.desktop.peripherals.keyboard delay KEY_REPEAT_DELAY)
setKeyRepeatInterval  = $(gsettings set org.gnome.desktop.peripherals.keyboard repeat-interval KEY_REPEAT_INTERVAL)

# Mouse configuration
setScrollButton       = $(sleep 1 && xinput set-prop "pointer:Keymapper" "libinput Button Scrolling Button" 2)
enableScrollButton    = $(sleep 1 && xinput set-prop "pointer:Keymapper" "libinput Scroll Method Enabled" 0, 0, 1)

# On startup actions
applyInputDeviceConfig = setKeyRepeatDelay setKeyRepeatInterval setScrollButton enableScrollButton

# Solarized palette
base01       = "586e75"
base00       = "657b83" 
base0        = "839496"
base1        = "93a1a1"
base2        = "eee8d5"
base3        = "fdf6e3"
yellow       = "b58900"
orange       = "cb4b16"
red          = "d30102"
magenta      = "d33682"
violet       = "6c71c4"
blue         = "268bd2"
cyan         = "2aa198"
green        = "859900"

# Logging/debugging

logColor     = $(pastel --force-color paint "$1" "[$0]" >> LOG_FILE)

stage1       = 50ms logColor["$0", blue] ^ logColor["$0", base00]
context      = 50ms logColor["$0", green] ^ logColor["$0", base01]
trigger      = 50ms logColor["$0", orange]

write        = $(printf "$0" >> LOG_FILE)
endWrite     = $(printf "\n" >> LOG_FILE)

# For notifications and status bar events
event        = $(echo "$0" >> EVENT_FIFO)
notifyMs     = $(notify-send -t $1 keymapper "$0")
notify       = $(notify-send -t 5000 keymapper "$0")

# Lock/unlock modifiers
keyLockOn    = $(xdotool keydown $0 && touch STATE_DIR/$0Lock)
keyLockOff   = $(xdotool keyup $0 && rm -f STATE_DIR/$0Lock)
keyLocksOff  = $(xdotool keyup "Control" keyup "Alt" keyup "Shift" && rm -f STATE_DIR/$0Lock)

